var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.6,1,1.6]],["body/controllers/AppController.html",[0,2.467,1,2.467,2,2.679,3,0.556,4,0.556,5,0.466,6,2.679,7,0.556,8,1.27,9,4.892,10,1.939,11,0.05,12,0.873,13,3.323,14,0.999,15,4.226,16,1.476,17,0.556,18,0.758,19,0.556,20,0.16,21,0.999,22,3.323,23,3.323,24,0.03,25,0.039,26,0.03]],["title/modules/AppModule.html",[27,1.069,28,1.6]],["body/modules/AppModule.html",[1,2.392,2,2.881,3,0.432,4,0.432,5,0.362,11,0.048,17,0.853,18,0.589,19,0.432,20,0.124,24,0.024,25,0.033,26,0.024,27,1.599,28,2.931,29,1.146,30,1.146,31,1.506,32,1.506,33,1.006,34,1.506,35,1.506,36,2.08,37,2.08,38,2.439,39,2.135,40,2.085,41,1.506,42,1.506,43,2.579,44,2.425,45,2.579,46,2.08,47,1.506,48,1.146,49,1.506,50,2.579,51,1.31,52,2.579,53,2.425,54,2.579,55,1.224,56,2.08,57,2.08,58,2.579,59,2.579,60,2.579,61,2.579,62,2.579,63,2.08,64,2.579,65,3.572,66,2.579,67,1.506,68,2.579]],["title/modules/AuthModule.html",[27,1.069,38,1.392]],["body/modules/AuthModule.html",[3,0.387,4,0.387,5,0.324,11,0.049,17,0.832,18,0.527,19,0.387,20,0.111,24,0.021,25,0.03,26,0.021,27,1.506,29,1.027,30,1.027,31,1.349,32,1.349,33,0.902,34,2.253,35,2.253,38,2.64,39,2.061,40,1.93,41,1.349,42,1.349,44,2.245,48,1.027,49,1.349,57,1.864,69,1.864,70,1.864,71,1.864,72,2.311,73,2.291,74,2.354,75,2.061,76,2.311,77,1.864,78,2.311,79,2.311,80,1.569,81,3.307,82,1.349,83,2.311,84,1.93,85,2.311,86,2.311,87,2.311,88,1.349,89,2.311,90,2.311,91,1.864,92,2.311,93,1.569,94,2.311]],["title/classes/AuthResolver.html",[20,0.132,84,1.6]],["body/classes/AuthResolver.html",[3,0.425,4,0.425,5,0.356,7,0.425,8,1.061,10,2.061,11,0.049,12,1.067,14,1.061,17,0.735,19,0.425,20,0.122,21,1.061,24,0.023,25,0.032,26,0.023,51,1.288,67,1.481,73,2.124,77,2.046,84,2.061,95,1.288,96,2.046,97,2.124,98,2.848,99,4.392,100,1.288,101,2.537,102,2.537,103,1.21,104,0.928,105,0.798,106,1.21,107,2.046,108,3.542,109,3.531,110,2.537,111,2.848,112,2.23,113,3.531,114,2.537,115,2.046,116,2.046,117,2.046,118,1.723,119,1.723,120,1.723,121,2.537,122,2.537,123,2.537,124,1.481,125,2.537,126,1.288,127,2.537]],["title/injectables/AuthService.html",[73,1.218,128,0.625]],["body/injectables/AuthService.html",[3,0.317,4,0.317,5,0.265,7,0.317,8,0.857,11,0.05,12,0.902,14,0.857,16,1.918,17,0.75,18,0.431,19,0.317,20,0.091,21,1.032,24,0.017,25,0.026,26,0.017,48,0.84,49,1.104,55,0.648,56,1.525,73,1.267,75,1.991,80,1.284,93,1.284,97,1.918,98,2.3,100,1.448,103,1.177,104,0.902,105,0.675,106,1.177,107,2.3,108,3.085,111,1.525,112,1.942,117,1.525,118,1.284,119,1.284,124,2.005,126,1.744,128,0.651,129,0.84,130,1.525,131,2.852,132,1.891,133,4.316,134,1.748,135,1.891,136,1.891,137,2.852,138,3.435,139,1.891,140,1.267,141,2.852,142,1.891,143,1.891,144,2.005,145,2.233,146,2.787,147,1.891,148,2.852,149,1.891,150,2.852,151,1.284,152,1.525,153,1.284,154,1.891,155,1.891,156,1.891,157,1.937,158,1.525,159,1.891,160,1.525,161,2.852,162,1.891,163,1.891,164,1.891,165,1.284]],["title/injectables/GqlAuthGuard.html",[128,0.625,166,1.6]],["body/injectables/GqlAuthGuard.html",[3,0.523,4,0.523,5,0.438,7,0.523,8,1.221,11,0.047,12,0.82,14,0.939,17,0.756,18,0.713,19,0.523,20,0.15,21,0.939,24,0.029,25,0.037,26,0.029,51,1.585,82,1.823,103,1.07,104,0.82,105,0.614,106,1.07,128,0.927,129,1.388,145,1.823,166,2.37,167,3.275,168,2.757,169,2.518,170,4.061,171,4.061,172,3.854,173,3.123,174,3.123,175,3.123,176,3.123,177,2.518,178,3.123,179,2.518,180,3.123,181,3.123]],["title/injectables/JwtStrategy.html",[74,1.392,128,0.625]],["body/injectables/JwtStrategy.html",[3,0.465,4,0.465,5,0.389,7,0.465,8,1.129,11,0.05,12,0.986,14,0.834,17,0.764,18,0.633,19,0.465,20,0.133,21,0.834,24,0.025,25,0.034,26,0.025,48,1.233,49,1.62,74,1.906,82,1.62,88,1.62,91,2.238,97,1.891,100,2.161,103,0.951,104,0.729,105,0.545,106,0.951,128,0.857,129,1.233,140,1.233,151,1.884,158,2.238,160,2.238,177,2.238,182,2.238,183,3.755,184,2.775,185,3.755,186,2.775,187,2.775,188,2.775,189,2.238,190,2.775,191,2.775,192,2.775,193,2.775,194,2.775,195,2.775,196,2.775,197,2.775,198,2.775]],["title/injectables/PasswordService.html",[75,1.218,128,0.625]],["body/injectables/PasswordService.html",[3,0.43,4,0.43,5,0.361,7,0.43,8,1.071,11,0.049,12,1.074,14,1.071,16,2.263,17,0.596,18,0.586,19,0.43,20,0.123,21,1.071,24,0.023,25,0.033,26,0.023,75,1.583,103,1.221,104,0.936,105,0.804,106,1.221,112,2.241,128,0.813,129,1.142,144,2.387,199,2.072,200,2.872,201,4.089,202,4.089,203,3.562,204,4.089,205,4.415,206,2.569,207,2.569,208,3.562,209,2.569,210,1.499,211,1.744,212,2.072,213,2.072,214,3.562,215,2.569,216,2.569,217,2.072,218,2.569,219,2.569]],["title/classes/User1620199967642.html",[20,0.132,220,1.861]],["body/classes/User1620199967642.html",[3,0.427,4,0.427,5,0.358,7,0.427,8,1.064,11,0.049,12,0.93,14,1.064,17,0.427,19,0.427,20,0.122,24,0.023,25,0.032,26,0.023,95,1.293,97,2.127,103,1.214,104,0.93,105,0.696,106,1.214,112,2.233,126,1.798,140,1.574,152,2.055,210,1.487,220,2.404,221,3.283,222,2.055,223,2.856,224,4.071,225,4.786,226,3.542,227,3.542,228,3.542,229,5.084,230,2.548,231,3.542,232,2.548,233,1.487,234,3.542,235,2.548,236,2.856,237,2.055,238,2.548,239,3.542,240,2.548,241,2.548]],["title/classes/UserEntity.html",[20,0.132,55,0.939]],["body/classes/UserEntity.html",[3,0.396,4,0.396,5,0.332,7,0.396,10,2.727,11,0.049,12,1.227,16,2.252,17,0.563,19,0.396,20,0.114,24,0.022,25,0.031,26,0.022,55,1.152,67,1.961,95,1.2,104,0.621,105,0.945,118,1.605,119,1.605,140,1.737,165,2.654,200,2.71,210,2.282,211,2.281,223,2.71,233,1.38,236,1.906,237,3.152,242,1.906,243,3.909,244,3.909,245,3.909,246,3.909,247,2.364,248,4.497,249,2.364,250,3.909,251,2.364,252,2.364,253,3.909,254,2.364,255,3.36,256,3.36,257,3.36,258,2.364,259,3.36]],["title/classes/UserResolver.html",[20,0.132,260,1.6]],["body/classes/UserResolver.html",[3,0.447,4,0.447,5,0.374,7,0.447,8,1.099,10,1.557,11,0.049,12,0.96,14,0.802,17,0.813,18,0.609,19,0.447,20,0.128,21,0.802,24,0.024,25,0.033,26,0.024,51,1.354,55,1.538,95,1.354,97,1.853,100,1.856,103,1.253,104,0.96,105,0.719,106,1.253,115,2.151,116,2.151,124,1.557,126,1.354,134,1.894,144,1.557,146,2.482,166,1.557,168,1.811,260,2.134,261,2.151,262,3.656,263,2.668,264,2.668,265,2.668,266,2.668,267,2.668,268,2.151,269,1.811,270,2.668,271,1.811,272,2.668,273,2.668,274,2.668,275,2.668,276,2.668,277,2.668,278,2.668,279,2.668]],["title/injectables/UserService.html",[128,0.625,134,1.069]],["body/injectables/UserService.html",[3,0.339,4,0.339,5,0.284,7,0.339,8,0.903,11,0.05,12,1.11,14,1.19,16,1.591,17,0.663,18,0.462,19,0.339,20,0.097,21,1.19,24,0.018,25,0.027,26,0.018,47,1.182,55,0.694,97,2.233,100,1.525,103,1.357,104,1.04,105,0.778,106,1.357,112,2.39,124,1.182,126,2.01,128,0.685,129,0.9,134,1.172,140,0.9,144,1.182,145,1.753,146,2.039,153,2.039,165,1.375,211,2.43,233,1.182,271,1.375,280,1.634,281,3.004,282,3.959,283,3.004,284,3.004,285,2.026,286,3.959,287,2.026,288,3.004,289,3.004,290,3.579,291,2.026,292,2.026,293,3.004,294,2.026,295,3.004,296,2.026,297,2.026,298,2.026,299,2.026,300,2.026,301,2.026,302,2.026,303,1.634,304,2.026,305,2.026,306,2.026,307,2.026]],["title/modules/UsersModule.html",[27,1.069,39,1.218]],["body/modules/UsersModule.html",[3,0.491,4,0.491,5,0.411,11,0.047,17,0.813,18,0.669,19,0.491,20,0.141,24,0.027,25,0.036,26,0.027,27,1.707,29,1.303,30,1.303,31,1.711,32,1.711,33,1.144,34,2.554,35,2.554,39,2.263,40,2.274,41,1.711,42,1.711,44,1.99,46,2.364,47,1.711,55,1.005,134,2.094,260,2.274,268,2.364,271,1.99,308,2.364,309,2.364,310,2.364,311,2.932,312,2.932,313,2.932]],["title/coverage.html",[314,3.003]],["body/coverage.html",[0,1.434,1,1.434,5,0.345,6,1.982,11,0.049,20,0.208,24,0.022,25,0.032,26,0.022,33,0.959,48,1.534,53,1.668,55,0.842,73,1.092,74,1.248,75,1.092,84,1.434,96,1.982,105,0.483,120,1.668,128,1.041,130,1.982,134,0.959,157,1.668,166,1.434,167,1.982,168,1.668,169,1.982,182,1.982,199,1.982,220,1.668,221,1.982,222,1.982,242,1.982,260,1.434,261,1.982,269,1.668,280,1.982,314,1.982,315,2.457,316,2.457,317,2.457,318,5.35,319,3.453,320,1.982,321,4.562,322,4.731,323,1.982,324,3.992,325,3.992,326,1.982,327,2.457,328,2.457,329,1.982,330,1.982,331,1.982,332,2.457,333,2.457,334,2.457]],["title/dependencies.html",[30,1.463,335,2.297]],["body/dependencies.html",[11,0.051,18,0.541,24,0.022,25,0.031,26,0.022,30,1.055,33,1.314,47,1.385,51,1.205,63,3.159,80,1.611,82,1.385,88,1.385,105,0.467,189,2.717,217,1.914,233,1.385,336,2.373,337,2.373,338,2.373,339,3.369,340,2.373,341,4.917,342,2.373,343,2.373,344,2.373,345,2.373,346,2.373,347,3.369,348,2.717,349,2.373,350,2.373,351,3.917,352,2.373,353,2.373,354,2.373,355,3.369,356,2.373,357,3.369,358,2.373,359,2.373,360,2.373,361,2.373,362,2.373,363,2.373,364,2.373,365,2.373,366,2.373,367,2.373,368,2.373,369,2.373,370,2.373,371,2.373,372,1.914,373,2.373,374,2.373,375,2.373,376,2.373,377,2.373,378,2.373,379,2.373,380,2.373,381,2.373,382,2.373,383,2.373,384,2.373,385,2.373,386,2.373,387,2.373]],["title/miscellaneous/functions.html",[388,1.341,389,2.655]],["body/miscellaneous/functions.html",[7,0.68,11,0.044,24,0.037,25,0.044,26,0.037,33,1.981,331,3.273,388,2.369,389,3.273,390,4.059]],["title/index.html",[7,0.385,391,2.297,392,2.297]],["body/index.html",[11,0.049,24,0.038,25,0.044,26,0.038,393,4.14,394,3.338]],["title/modules.html",[29,1.655]],["body/modules.html",[11,0.042,24,0.035,25,0.042,26,0.035,28,2.252,29,1.714,38,1.958,39,1.714,348,4.007,395,4.969,396,4.969,397,4.969]],["title/overview.html",[398,3.003]],["body/overview.html",[0,1.598,11,0.048,24,0.025,25,0.034,26,0.025,27,1.068,28,2.856,29,1.217,30,1.217,31,1.598,32,1.598,33,1.068,34,1.598,35,1.598,36,2.208,37,2.208,38,2.696,39,2.224,40,2.172,41,1.598,42,1.598,69,2.208,70,2.208,71,2.208,73,2.224,74,2.146,75,1.878,95,1.39,129,1.217,134,1.953,303,2.208,308,2.208,309,2.208,310,2.208,398,2.208,399,2.738,400,2.738,401,2.738]],["title/miscellaneous/variables.html",[388,1.341,402,2.655]],["body/miscellaneous/variables.html",[7,0.336,11,0.051,16,1.325,21,1.326,24,0.018,25,0.027,26,0.018,48,1.751,53,2.025,67,1.741,88,1.171,93,1.362,104,0.527,105,0.828,120,2.025,140,1.325,145,1.171,151,2.416,153,1.362,157,2.416,172,2.405,179,2.87,210,1.741,212,3.396,213,3.786,269,2.025,320,1.618,323,1.618,326,1.618,329,1.618,330,1.618,372,1.618,388,1.171,394,1.618,402,1.618,403,2.006,404,2.006,405,2.006,406,2.006,407,2.006,408,2.982,409,2.982,410,3.559,411,2.982,412,2.006,413,2.006,414,2.006,415,2.006,416,2.006,417,2.006,418,2.006,419,2.006,420,2.006,421,2.006,422,2.006,423,2.006,424,2.006,425,2.006,426,2.006,427,2.006,428,2.006,429,2.006,430,3.94,431,2.006,432,2.006,433,2.006,434,2.006,435,2.006,436,2.006,437,2.006,438,2.982,439,2.006,440,2.006,441,2.006,442,2.006,443,2.006,444,2.006,445,2.006,446,2.006,447,2.006,448,2.006,449,2.006,450,2.006,451,2.006,452,2.006]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":303,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["10",{"_index":214,"title":{},"body":{"injectables/PasswordService.html":{}}}],["11.2.0",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["11.2.11",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["11.2.12",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["15.5.0",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["2a$10$umtgukl/c52erqekqyrjpo1pny..t5nbfv/nysrcjo2dzl0dvl7kg",{"_index":241,"title":{},"body":{"classes/User1620199967642.html":{}}}],["3",{"_index":399,"title":{},"body":{"overview.html":{}}}],["4",{"_index":401,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":400,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":256,"title":{},"body":{"classes/UserEntity.html":{}}}],["6.6.3",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["7.10.6",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["8.6.0",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["access/interfaces",{"_index":119,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/UserEntity.html":{}}}],["accesstoken",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin",{"_index":239,"title":{},"body":{"classes/User1620199967642.html":{}}}],["admin@example.ru",{"_index":240,"title":{},"body":{"classes/User1620199967642.html":{}}}],["always",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["angular/localize",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":394,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.resolver",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../app.resolver.ts",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../user.decorator.ts",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/backend/api/src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/app.controller.ts:8",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/backend/api/src/app/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/api/src/app/app.resolver.ts",{"_index":320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/api/src/app/auth/auth.module.ts",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/backend/api/src/app/auth/decorators/auth.decorator.ts",{"_index":323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/api/src/app/auth/resolver/auth.resolver.ts",{"_index":96,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/auth/resolver/auth.resolver.ts:13",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/backend/api/src/app/auth/resolver/auth.resolver.ts:18",{"_index":114,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/backend/api/src/app/auth/resolver/auth.resolver.ts:7",{"_index":102,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/backend/api/src/app/auth/services/auth.service.ts",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/auth/services/auth.service.ts:10",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/backend/api/src/app/auth/services/auth.service.ts:19",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/backend/api/src/app/auth/services/auth.service.ts:31",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/backend/api/src/app/auth/services/jwt.strategy.ts",{"_index":182,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/auth/services/jwt.strategy.ts:17",{"_index":186,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/backend/api/src/app/auth/services/jwt.strategy.ts:8",{"_index":184,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/backend/api/src/app/auth/services/password.service.ts",{"_index":199,"title":{},"body":{"injectables/PasswordService.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/auth/services/password.service.ts:13",{"_index":206,"title":{},"body":{"injectables/PasswordService.html":{}}}],["apps/backend/api/src/app/auth/services/password.service.ts:7",{"_index":215,"title":{},"body":{"injectables/PasswordService.html":{}}}],["apps/backend/api/src/app/auth/services/password.service.ts:9",{"_index":209,"title":{},"body":{"injectables/PasswordService.html":{}}}],["apps/backend/api/src/app/users/decorators/user.decorator.ts",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/api/src/app/users/entities/user.entity.ts",{"_index":242,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/users/entities/user.entity.ts:12",{"_index":258,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/backend/api/src/app/users/entities/user.entity.ts:15",{"_index":247,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/backend/api/src/app/users/entities/user.entity.ts:18",{"_index":254,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/backend/api/src/app/users/entities/user.entity.ts:21",{"_index":249,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/backend/api/src/app/users/entities/user.entity.ts:24",{"_index":252,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/backend/api/src/app/users/entities/user.entity.ts:9",{"_index":251,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/backend/api/src/app/users/guards/gql",{"_index":167,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/users/resolvers/user.resolver.ts",{"_index":261,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/users/resolvers/user.resolver.ts:17",{"_index":267,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/backend/api/src/app/users/resolvers/user.resolver.ts:9",{"_index":264,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/backend/api/src/app/users/services/user.service.ts",{"_index":280,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/backend/api/src/app/users/services/user.service.ts:10",{"_index":287,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/api/src/app/users/services/user.service.ts:17",{"_index":292,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/api/src/app/users/services/user.service.ts:21",{"_index":294,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/api/src/app/users/services/user.service.ts:25",{"_index":296,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/api/src/app/users/services/user.service.ts:31",{"_index":291,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/api/src/app/users/users.module.ts",{"_index":311,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/backend/api/src/environments/environment.prod.ts",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/api/src/environments/environment.ts",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/api/src/main.ts",{"_index":331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/backend/api/src/migrations/1620199967642",{"_index":221,"title":{},"body":{"classes/User1620199967642.html":{},"coverage.html":{}}}],["args",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args.password",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args.username",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ast",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ast.kind",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":97,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/User1620199967642.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["aurora",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":168,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":175,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["authguard('jwt",{"_index":178,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["authmodule",{"_index":38,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authresolver",{"_index":84,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":73,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autodomkst/shared/data",{"_index":118,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/UserEntity.html":{}}}],["await",{"_index":126,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User1620199967642.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":393,"title":{},"body":{"index.html":{}}}],["backend/api",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["bcrypt",{"_index":217,"title":{},"body":{"injectables/PasswordService.html":{},"dependencies.html":{}}}],["beta3",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["bootstrap",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["browse",{"_index":397,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":348,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["class",{"_index":20,"title":{"classes/AuthResolver.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["classes",{"_index":95,"title":{},"body":{"classes/AuthResolver.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["client",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":308,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":309,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":310,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":248,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({length",{"_index":255,"title":{},"body":{"classes/UserEntity.html":{}}}],["compare",{"_index":202,"title":{},"body":{"injectables/PasswordService.html":{}}}],["compare(pasword",{"_index":204,"title":{},"body":{"injectables/PasswordService.html":{}}}],["connection",{"_index":415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":101,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(jwtservice",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":123,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(userrepository",{"_index":285,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":263,"title":{},"body":{"classes/UserResolver.html":{}}}],["contex",{"_index":174,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["context",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":314,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":244,"title":{},"body":{"classes/UserEntity.html":{}}}],["createdatecolumn",{"_index":246,"title":{},"body":{"classes/UserEntity.html":{}}}],["createparamdecorator((data",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuser",{"_index":281,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(user",{"_index":289,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":179,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ctx.getargs()[1",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.getcontext().req",{"_index":181,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["currentuser",{"_index":269,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(ast.value",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(environment.jwt.expiresin).getdate",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(value",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthResolver.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{}}}],["decorators/auth.decorator",{"_index":121,"title":{},"body":{"classes/AuthResolver.html":{}}}],["decorators/user.decorator",{"_index":270,"title":{},"body":{"classes/UserResolver.html":{}}}],["default",{"_index":212,"title":{},"body":{"injectables/PasswordService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"classes/User1620199967642.html":{}}}],["dependencies",{"_index":30,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["down",{"_index":226,"title":{},"body":{"classes/User1620199967642.html":{}}}],["down(queryrunner",{"_index":228,"title":{},"body":{"classes/User1620199967642.html":{}}}],["dropschema",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":237,"title":{},"body":{"classes/User1620199967642.html":{},"classes/UserEntity.html":{}}}],["entities",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["entities/user.entity",{"_index":271,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["entity",{"_index":259,"title":{},"body":{"classes/UserEntity.html":{}}}],["environment",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.connection",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.jwt.expiresin",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{}}}],["environment.jwt.secret",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["environments/environment",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["executioncontext",{"_index":172,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":177,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["find",{"_index":282,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyid",{"_index":283,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyid(id",{"_index":293,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyusername",{"_index":284,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyusername(username",{"_index":295,"title":{},"body":{"injectables/UserService.html":{}}}],["format",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":389,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getdata",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["gethash",{"_index":203,"title":{},"body":{"injectables/PasswordService.html":{}}}],["gethash(password",{"_index":208,"title":{},"body":{"injectables/PasswordService.html":{}}}],["getrequest",{"_index":170,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getrequest(contex",{"_index":171,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getting",{"_index":391,"title":{"index.html":{}},"body":{}}],["gqlauthguard",{"_index":166,"title":{"injectables/GqlAuthGuard.html":{}},"body":{"injectables/GqlAuthGuard.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":176,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(contex",{"_index":180,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["graphql",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["graphqljson",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlscalartype",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":273,"title":{},"body":{"classes/UserResolver.html":{}}}],["guard.ts",{"_index":169,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["guard.ts:8",{"_index":173,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["guards/gql",{"_index":272,"title":{},"body":{"classes/UserResolver.html":{}}}],["hash",{"_index":216,"title":{},"body":{"injectables/PasswordService.html":{}}}],["hash(password",{"_index":218,"title":{},"body":{"injectables/PasswordService.html":{}}}],["host",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":223,"title":{},"body":{"classes/User1620199967642.html":{},"classes/UserEntity.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["injectable",{"_index":128,"title":{"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":297,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(userentity",{"_index":298,"title":{},"body":{"injectables/UserService.html":{}}}],["insert",{"_index":235,"title":{},"body":{"classes/User1620199967642.html":{}}}],["isignauthpayload",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["isignauthresponse",{"_index":117,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["isvalid",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["iuser",{"_index":243,"title":{},"body":{"classes/UserEntity.html":{}}}],["json",{"_index":372,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":79,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":74,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kind.string",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["logging",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":98,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["login(@signin",{"_index":125,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(signinpayload",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":99,"title":{},"body":{"classes/AuthResolver.html":{}}}],["matching",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["metadata",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["migrationinterface",{"_index":224,"title":{},"body":{"classes/User1620199967642.html":{}}}],["miscellaneous",{"_index":388,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":27,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":29,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/GqlAuthGuard.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":80,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":82,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":305,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["nrwl/angular",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":211,"title":{},"body":{"injectables/PasswordService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["number(process.env.db_port",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(process.env.jwt_expires_in",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":398,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":335,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["parseliteral(ast",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parsevalue(value",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":290,"title":{},"body":{"injectables/UserService.html":{}}}],["pass",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":189,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":81,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":210,"title":{},"body":{"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["password.service",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordhash",{"_index":205,"title":{},"body":{"injectables/PasswordService.html":{}}}],["passwordservice",{"_index":75,"title":{"injectables/PasswordService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PasswordService.html":{},"coverage.html":{},"overview.html":{}}}],["pasword",{"_index":207,"title":{},"body":{"injectables/PasswordService.html":{}}}],["payload",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["playground",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":250,"title":{},"body":{"classes/UserEntity.html":{}}}],["private",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswordService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["privatekey",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.db_host",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_type",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user_name",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user_password",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":200,"title":{},"body":{"injectables/PasswordService.html":{},"classes/UserEntity.html":{}}}],["providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":225,"title":{},"body":{"classes/User1620199967642.html":{}}}],["query",{"_index":115,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["query('login",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{}}}],["query('logout",{"_index":113,"title":{},"body":{"classes/AuthResolver.html":{}}}],["query('user",{"_index":276,"title":{},"body":{"classes/UserResolver.html":{}}}],["query('user')@useguards(gqlauthguard",{"_index":266,"title":{},"body":{"classes/UserResolver.html":{}}}],["queryrunner",{"_index":229,"title":{},"body":{"classes/User1620199967642.html":{}}}],["queryrunner.query",{"_index":234,"title":{},"body":{"classes/User1620199967642.html":{}}}],["readonly",{"_index":124,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":286,"title":{},"body":{"injectables/UserService.html":{}}}],["req",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":116,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["resolver('auth",{"_index":122,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver('user",{"_index":275,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolver/auth.resolver",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{}}}],["resolvermap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["resolvers/user.resolver",{"_index":312,"title":{},"body":{"modules/UsersModule.html":{}}}],["result",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["rxjs",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["saltround",{"_index":201,"title":{},"body":{"injectables/PasswordService.html":{}}}],["scalar",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialize(value",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["services/auth.service",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["services/jwt.strategy",{"_index":83,"title":{},"body":{"modules/AuthModule.html":{}}}],["services/password.service",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{}}}],["services/user.service",{"_index":268,"title":{},"body":{"classes/UserResolver.html":{},"modules/UsersModule.html":{}}}],["signin",{"_index":120,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signinpayload",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["signinpayload.password",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["started",{"_index":392,"title":{"index.html":{}},"body":{}}],["statements",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["strategy",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/PasswordService.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":395,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":396,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["this.authservice.login(signinpayload",{"_index":127,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.jwtservice.sign(payload",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.passwordservice.compare(pass",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.saltround",{"_index":219,"title":{},"body":{"injectables/PasswordService.html":{}}}],["this.userrepository.create(user",{"_index":306,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":299,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find({username",{"_index":301,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(id",{"_index":300,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":307,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findonebyid(user.id",{"_index":279,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.findonebyusername(username",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateuser(signinpayload.username",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["tools",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordService.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":233,"title":{},"body":{"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":313,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["typepaths",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["unauthorizedexception",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["unique",{"_index":257,"title":{},"body":{"classes/UserEntity.html":{}}}],["unknown",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":227,"title":{},"body":{"classes/User1620199967642.html":{}}}],["up(queryrunner",{"_index":231,"title":{},"body":{"classes/User1620199967642.html":{}}}],["updated",{"_index":245,"title":{},"body":{"classes/UserEntity.html":{}}}],["updatedatecolumn",{"_index":253,"title":{},"body":{"classes/UserEntity.html":{}}}],["useguards",{"_index":274,"title":{},"body":{"classes/UserResolver.html":{}}}],["useguards(gqlauthguard",{"_index":277,"title":{},"body":{"classes/UserResolver.html":{}}}],["user",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.length",{"_index":302,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.ts",{"_index":222,"title":{},"body":{"classes/User1620199967642.html":{},"coverage.html":{}}}],["user.ts:12",{"_index":230,"title":{},"body":{"classes/User1620199967642.html":{}}}],["user.ts:5",{"_index":232,"title":{},"body":{"classes/User1620199967642.html":{}}}],["user.username",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["user1620199967642",{"_index":220,"title":{"classes/User1620199967642.html":{}},"body":{"classes/User1620199967642.html":{},"coverage.html":{}}}],["user[0",{"_index":304,"title":{},"body":{"injectables/UserService.html":{}}}],["userentity",{"_index":55,"title":{"classes/UserEntity.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userid",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["username",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/User1620199967642.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":288,"title":{},"body":{"injectables/UserService.html":{}}}],["userresolver",{"_index":260,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["users",{"_index":236,"title":{},"body":{"classes/User1620199967642.html":{},"classes/UserEntity.html":{}}}],["users/entities/user.entity",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["users/services/user.service",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/users.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["userservice",{"_index":134,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":39,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["validate",{"_index":183,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":185,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":213,"title":{},"body":{"injectables/PasswordService.html":{},"miscellaneous/variables.html":{}}}],["value.toisostring",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":238,"title":{},"body":{"classes/User1620199967642.html":{}}}],["variable",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":402,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["welcome",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["whoami",{"_index":262,"title":{},"body":{"classes/UserResolver.html":{}}}],["whoami(@currentuser",{"_index":278,"title":{},"body":{"classes/UserResolver.html":{}}}],["whoami(user",{"_index":265,"title":{},"body":{"classes/UserResolver.html":{}}}],["zone.js",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/backend/api/src/app/app.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n\n@Controller()\nexport class AppController {\n\n  @Get()\n  getData() {\n    return { message: 'Welcome to backend/api!' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/api/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\n\nimport {AppController} from './app.controller';\nimport {TypeOrmModule} from '@nestjs/typeorm';\nimport {environment} from '../environments/environment';\nimport {GraphQLModule} from '@nestjs/graphql';\nimport {AuthModule} from './auth/auth.module';\nimport {resolverMap} from './app.resolver';\nimport {UserEntity} from './users/entities/user.entity';\nimport {UsersModule} from './users/users.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      ...environment.connection,\n      entities: [UserEntity],\n    }),\n    GraphQLModule.forRoot({\n      typePaths: ['./**/*.graphql'],\n      context: ({req}) => ({req}),\n      playground: true,\n      resolvers: [resolverMap],\n    }),\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPasswordService\n\nPasswordService\n\nAuthModule -->\n\nPasswordService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            PasswordService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {AuthService} from './services/auth.service';\nimport {PasswordService} from './services/password.service';\nimport {JwtModule} from '@nestjs/jwt';\nimport {PassportModule} from '@nestjs/passport';\nimport {environment} from '../../environments/environment';\nimport {JwtStrategy} from './services/jwt.strategy';\nimport {AuthResolver} from './resolver/auth.resolver';\nimport {UsersModule} from '../users/users.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n    }),\n    JwtModule.register({\n      privateKey: environment.jwt.secret,\n      signOptions: {\n        expiresIn: environment.jwt.expiresIn,\n      },\n    }),\n  ],\n  providers: [\n    AuthService,\n    PasswordService,\n    JwtStrategy,\n    AuthResolver,\n  ],\n  exports: [\n    AuthService,\n    PassportModule,\n  ],\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/auth/resolver/auth.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/api/src/app/auth/resolver/auth.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(signInPayload: ISignAuthPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('login')\n                \n            \n\n            \n                \n                    Defined in apps/backend/api/src/app/auth/resolver/auth.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInPayload\n                                    \n                                            ISignAuthPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('logout')\n                \n            \n\n            \n                \n                    Defined in apps/backend/api/src/app/auth/resolver/auth.resolver.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Query, Resolver} from '@nestjs/graphql';\nimport type {ISignAuthPayload, ISignAuthResponse} from '@autodomkst/shared/data-access/interfaces';\nimport {SignIn} from '../decorators/auth.decorator';\nimport {AuthService} from '../services/auth.service';\n\n@Resolver('Auth')\nexport class AuthResolver{\n\n  constructor(private readonly authService: AuthService) {\n  }\n\n  @Query('login')\n  async login(@SignIn() signInPayload: ISignAuthPayload): Promise{\n    return await this.authService.login(signInPayload);\n  }\n\n  @Query('logout')\n  async logout(): Promise {\n    return true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/auth/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UserService, passwordService: PasswordService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/api/src/app/auth/services/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwordService\n                                                  \n                                                        \n                                                                        PasswordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(signInPayload: ISignAuthPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/auth/services/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInPayload\n                                    \n                                            ISignAuthPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/auth/services/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, UnauthorizedException} from '@nestjs/common';\nimport {ISignAuthPayload, ISignAuthResponse} from '@autodomkst/shared/data-access/interfaces';\nimport {UserService} from '../../users/services/user.service';\nimport {JwtService} from '@nestjs/jwt';\nimport {PasswordService} from './password.service';\nimport {UserEntity} from '../../users/entities/user.entity';\nimport {environment} from '../../../environments/environment';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly userService: UserService,\n    private readonly passwordService: PasswordService,\n  ) {\n  }\n\n  async validateUser(username: string, pass: string): Promise> {\n    const user = await this.userService.findOneByUsername(username);\n\n    const isValid = user ? await this.passwordService.compare(pass, user.password) : false;\n\n    if (isValid) {\n      delete user.password;\n      return user;\n    }\n    return null;\n  }\n\n  async login(signInPayload: ISignAuthPayload): Promise {\n    const user = await this.validateUser(signInPayload.username, signInPayload.password);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    const payload = {\n      username: user.username,\n      userId: user.id,\n    };\n    return {\n      accessToken: this.jwtService.sign(payload),\n      expiresIn: new Date(environment.jwt.expiresIn).getDate(),\n      id: user.id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlAuthGuard.html":{"url":"injectables/GqlAuthGuard.html","title":"injectable - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/users/guards/gql-auth-guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(contex: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/users/guards/gql-auth-guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contex\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {ExecutionContext, Injectable} from \"@nestjs/common\";\nimport {GqlExecutionContext} from \"@nestjs/graphql\";\n\n\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard('jwt'){\n  getRequest(contex: ExecutionContext){\n    const ctx = GqlExecutionContext.create(contex);\n\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/auth/services/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/backend/api/src/app/auth/services/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/auth/services/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport {environment} from '../../../environments/environment';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: environment.jwt.secret\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordService.html":{"url":"injectables/PasswordService.html","title":"injectable - PasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/auth/services/password.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                saltRound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compare\n                            \n                            \n                                getHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            compare\n                        \n                        \n                    \n                \n            \n            \n                \ncompare(pasword: string, passwordHash: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/auth/services/password.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pasword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHash\n                        \n                        \n                    \n                \n            \n            \n                \ngetHash(password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/auth/services/password.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saltRound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in apps/backend/api/src/app/auth/services/password.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@nestjs/common';\nimport { compare, hash } from 'bcrypt';\n\n@Injectable()\nexport class PasswordService {\n\n  private saltRound = 10;\n\n  getHash(password: string): Promise {\n    return hash(password, this.saltRound);\n  }\n\n  compare(pasword: string, passwordHash: string): Promise {\n    return compare(pasword, passwordHash);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User1620199967642.html":{"url":"classes/User1620199967642.html","title":"class - User1620199967642","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User1620199967642\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/migrations/1620199967642-User.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/migrations/1620199967642-User.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/migrations/1620199967642-User.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class User1620199967642 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n      await queryRunner.query(`\n      INSERT INTO users (username, email, password)\n      VALUES ('admin', 'admin@example.ru', '$2a$10$UmTguKl/C52erQeKQYRJpO1Pny..t5NBFv/NySrcJO2Dzl0DVl7KG')\n      `);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n      await queryRunner.query(`\n      DELETE FROM users WHERE username = 'admin'\n      `);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/users/entities/user.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updated\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/backend/api/src/app/users/entities/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/backend/api/src/app/users/entities/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/backend/api/src/app/users/entities/user.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/backend/api/src/app/users/entities/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/backend/api/src/app/users/entities/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/backend/api/src/app/users/entities/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, CreateDateColumn, Entity, PrimaryGeneratedColumn, UpdateDateColumn} from \"typeorm\";\nimport type {IUser} from \"@autodomkst/shared/data-access/interfaces\";\n\n@Entity({\n  name: 'users'\n})\nexport class UserEntity implements IUser {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({length: 50, unique: true})\n  username: string;\n\n  @CreateDateColumn()\n  created: string;\n\n  @UpdateDateColumn()\n  updated: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/users/resolvers/user.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                whoAmI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/api/src/app/users/resolvers/user.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            whoAmI\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    whoAmI(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('user')@UseGuards(GqlAuthGuard)\n                \n            \n\n            \n                \n                    Defined in apps/backend/api/src/app/users/resolvers/user.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Query, Resolver} from '@nestjs/graphql';\nimport {UserService} from \"../services/user.service\";\nimport {CurrentUser} from \"../decorators/user.decorator\";\nimport {UserEntity} from \"../entities/user.entity\";\nimport {GqlAuthGuard} from '../guards/gql-auth-guard';\nimport {UseGuards} from '@nestjs/common';\n\n@Resolver('User')\nexport class UserResolver {\n  constructor(\n    private readonly userService: UserService,\n  ) {\n  }\n\n  @Query('user')\n  @UseGuards(GqlAuthGuard)\n  async whoAmI(@CurrentUser() user: UserEntity) {\n    return await this.userService.findOneById(user.id);\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/api/src/app/users/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/api/src/app/users/services/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/users/services/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find()\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/users/services/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/users/services/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/api/src/app/users/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from \"@nestjs/common\";\nimport {InjectRepository} from \"@nestjs/typeorm\";\nimport {Repository} from \"typeorm\";\n\n\nimport {UserEntity} from \"../entities/user.entity\";\n\n\n@Injectable()\nexport class UserService {\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository\n  ) {}\n\n  async find(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findOneById(id: number): Promise {\n    return await (this.userRepository.findOne(id)) || null;\n  }\n\n  async findOneByUsername(username: string): Promise {\n    const user = await this.userRepository.find({username});\n\n    return user.length === 1 ? user[0] : null;\n  }\n\n  async createUser(user: Partial): Promise {\n    const newUser = await this.userRepository.create(user);\n\n    return this.userRepository.save(newUser);\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUsersModule\n\nUsersModule\n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/api/src/app/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {UserService} from \"./services/user.service\";\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {UserEntity} from \"./entities/user.entity\";\nimport {UserResolver} from \"./resolvers/user.resolver\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  providers: [UserService, UserResolver],\n  exports: [UserService],\n})\nexport class UsersModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/backend/api/src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/app.resolver.ts\n            \n            variable\n            resolverMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/auth/decorators/auth.decorator.ts\n            \n            variable\n            SignIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/auth/resolver/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/auth/services/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/auth/services/password.service.ts\n            \n            injectable\n            PasswordService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/users/decorators/user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/users/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/users/guards/gql-auth-guard.ts\n            \n            injectable\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/users/resolvers/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/api/src/app/users/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/api/src/migrations/1620199967642-User.ts\n            \n            class\n            User1620199967642\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.12\n        \n            @angular/cdk : ^11.2.11\n        \n            @angular/common : ^11.2.0\n        \n            @angular/compiler : ^11.2.0\n        \n            @angular/core : ^11.2.0\n        \n            @angular/forms : ^11.2.0\n        \n            @angular/localize : ^11.2.0\n        \n            @angular/material : ^11.2.11\n        \n            @angular/platform-browser : ^11.2.0\n        \n            @angular/platform-browser-dynamic : ^11.2.0\n        \n            @angular/router : ^11.2.0\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/graphql : ^7.10.6\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @ng-bootstrap/ng-bootstrap : 9.1.0\n        \n            @nrwl/angular : 12.1.0\n        \n            apollo-server-express : ^2.24.0\n        \n            bcrypt : ^5.0.1\n        \n            bootstrap : ^5.0.0-beta3\n        \n            graphql : ^15.5.0\n        \n            graphql-tools : ^7.0.4\n        \n            graphql-type-json : ^0.3.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.6.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.6.3\n        \n            tslib : ^2.0.0\n        \n            typeorm : ^0.2.32\n        \n            zone.js : ^0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nГлавная страница документации backend-api\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPasswordService\n\nPasswordService\n\nAuthModule -->\n\nPasswordService->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (apps/.../user.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            resolverMap   (apps/.../app.resolver.ts)\n                        \n                        \n                            SignIn   (apps/.../auth.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend/api/src/app/users/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  return ctx;\n})\n                        \n                    \n\n\n            \n        \n\n    apps/backend/api/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n    apps/backend/api/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  jwt: {\n    secret: process.env.JWT_SECRET,\n    expiresIn: Number(process.env.JWT_EXPIRES_IN),\n  },\n  connection: {\n    type: process.env.DB_TYPE as 'aurora-data-api',\n    host: process.env.DB_HOST,\n    port: Number(process.env.DB_PORT),\n    username: process.env.DB_USER_NAME,\n    password: process.env.DB_USER_PASSWORD,\n    database: process.env.DB_NAME,\n    dropSchema: false,\n    synchronize: true,\n    logging: false,\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    apps/backend/api/src/app/app.resolver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            resolverMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  Date: new GraphQLScalarType({\n    name: 'Date',\n    description: 'Date custom scalar type',\n    serialize(value: Date) {\n      return value.toISOString() // Value send the client\n    },\n    parseValue(value: string) {\n      return new Date(value) // Value from to the client\n    },\n    parseLiteral(ast) {\n      if (ast.kind === Kind.STRING) {\n        return new Date(ast.value) // ast value is always in string format\n      }\n      return null\n    },\n  }),\n  JSON: GraphQLJSON,\n}\n                        \n                    \n\n\n            \n        \n\n    apps/backend/api/src/app/auth/decorators/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SignIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  const args = ctx.getArgs()[1];\n  return {username: args.username, password: args.password};\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
